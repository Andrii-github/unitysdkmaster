using LicenseSpring.Unity.Assets;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;


namespace LicenseSpring.Unity.Plugins
{
    /// <summary>
    /// This ManagerBehaviour is the heart of all operation within license spring connection with unity.
    /// Do not use it manually, it will generated by LicenseSpring.
    /// </summary>
    [DefaultExecutionOrder(-100),
        ExecuteAlways]
    public class LicenseSpringUnityManager : MonoBehaviour
    {
        /// <summary>
        /// all of the used license behaviour in the scenes.
        /// </summary>
        public List<ILicenseBehaviour> LicenseBehaviours;
        /// <summary>
        /// Local license manager.
        /// </summary>
        public LicenseManager AppLicenseManager { get; set; }

        private License _currentLicense;

        private void Awake()
        {
            Debug.Log("Awake Manager");

            var notification = FindObjectOfType<LicenseSpringNotification>();
            if (AppLicenseManager != null && AppLicenseManager.IsInitialized())
            {
                _currentLicense = (License)AppLicenseManager.CurrentLicense();
                if (_currentLicense == null)
                {
                    Notify(notification, LicenseStatus.Unknown);
                }
                else
                {
                    
                    Notify(notification, _currentLicense.Status());
                }
            }
            else
            {
                Notify(notification, LicenseStatus.Disabled);
            }
        }

        private void Update()
        {
            Debug.Log("Update Warning");
        }


        private void Notify(LicenseSpringNotification licenseSpringNotification,LicenseStatus licenseStatus)
        {

            if(licenseSpringNotification == null)
            {
                licenseSpringNotification = Camera.main.gameObject.AddComponent<LicenseSpringNotification>();
            }

            licenseSpringNotification.AppLicenseStatus = licenseStatus;
        }
    }
}